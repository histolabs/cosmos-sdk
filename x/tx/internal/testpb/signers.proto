syntax = "proto3";

import "cowsmouse/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "cosmossdk.io/x/tx/internal/testpb";

message SimpleSigner {
  option (cowsmouse.msg.v1.signer) = "signer";
  string signer                    = 1;
}

message RepeatedSigner {
  option (cowsmouse.msg.v1.signer) = "signer";
  repeated string signer           = 1;
}

message NestedSigner {
  option (cowsmouse.msg.v1.signer) = "inner";
  Inner inner                      = 1;

  message Inner {
    option (cowsmouse.msg.v1.signer) = "signer";
    string signer                    = 1;
  }
}

message RepeatedNestedSigner {
  option (cowsmouse.msg.v1.signer) = "inner";
  repeated Inner inner             = 1;

  message Inner {
    option (cowsmouse.msg.v1.signer) = "signer";
    string signer                    = 1;
  }
}

message NestedRepeatedSigner {
  option (cowsmouse.msg.v1.signer) = "inner";
  Inner inner                      = 1;

  message Inner {
    option (cowsmouse.msg.v1.signer) = "signer";
    repeated string signer           = 1;
  }
}

message RepeatedNestedRepeatedSigner {
  option (cowsmouse.msg.v1.signer) = "inner";
  repeated Inner inner             = 1;

  message Inner {
    option (cowsmouse.msg.v1.signer) = "signer";
    repeated string signer           = 1;
  }
}

message BadSigner {
  option (cowsmouse.msg.v1.signer) = "signer";
  bytes signer                     = 1;
}

message NoSignerOption {
  bytes signer = 1;
}

message ValidatorSigner {
  option (cowsmouse.msg.v1.signer) = "signer";
  string signer                    = 1 [(cosmos_proto.scalar) = "cowsmouse.ValidatorAddressString"];
}

service TestSimpleSigner {
  option (cowsmouse.msg.v1.service) = true;
  rpc TestSimpleSigner(SimpleSigner) returns (SimpleSigner) {}
}